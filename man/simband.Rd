% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simband.R
\name{simband}
\alias{simband}
\title{Calculate simultaneous FDP bounds given a set of ordered labels resulting
from TDC.}
\usage{
simband(
  labels,
  gamma,
  type,
  indices = 1:length(labels),
  d_max = NULL,
  max_fdp = 0.5,
  c = 0.5,
  lambda = 0.5,
  interpolate = TRUE
)
}
\arguments{
\item{labels}{A vector of (ordered) labels resulting from TDC.}

\item{gamma}{The confidence level of the band. Typical values include
\code{gamma = 0.05} or \code{gamma = 0.01}.}

\item{type}{A character string specifying which band to use. Must be one of
"stband" or "uniband".}

\item{indices}{A vector of indices of (ordered) hypotheses associated to TDC.
Defaults to \code{1:n}, where \code{n} is the number of hypotheses.}

\item{d_max}{An optional positive integer specifying the maximum number
of decoy wins considered in calculating the bands.}

\item{max_fdp}{A number specifying the maximum FDP considered by the user in
calculating the bands. Used to compute dmax if dmax is set to NULL.}

\item{c}{Determines the ranks of the target score that are considered
winning. Defaults to \code{c = 0.5} for TDC.}

\item{lambda}{Determines the ranks of the target score that are
considered losing. Defaults to \code{lambda = 0.5} for TDC.}

\item{interpolate}{A boolean indicating whether the bands should be
interpolated. Offers a slight boost in performance at the cost of computing
power. Defaults to \code{TRUE}.}
}
\value{
A vector of upper prediction bounds on the FDP for each of the
specified indices.
}
\description{
In TDC, each hypothesis is attached to a winning score and a label (1 for a
target win and -1 for a decoy win). \code{simband()} assumes that the
hypotheses are ordered in decreasing order of winning scores (breaking
ties at random). In particular, the argument \code{labels} is ordered
according to this rule.
}
\examples{
if (requireNamespace("fdpbandsdata", quietly = TRUE)) {
  set.seed(123)
  labels <- c(
    rep(1, 250),
    sample(c(1, -1), size = 250, replace = TRUE, prob = c(0.9, 0.1)),
    sample(c(1, -1), size = 250, replace = TRUE, prob = c(0.5, 0.5)),
    sample(c(1, -1), size = 250, replace = TRUE, prob = c(0.1, 0.9))
  )
  gamma <- 0.05
  simband(labels, gamma, "stband", indices = c(100, 250, 500, 1000))
}
}
